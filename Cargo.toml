[package]
name = "claude-usage"
version = "1.0.1"
description = "Fast Rust implementation for Claude usage analysis across multiple VMs"
authors = [""]
license = "MIT"
edition = "2021"
rust-version = "1.70"
readme = "README.md"
repository = ""
homepage = ""
keywords = ["cli"]
categories = ["command-line-utilities"]

[[bin]]
name = "claude-usage"
path = "src/main.rs"

[dependencies]
# Core CLI and error handling
clap = { version = "4.4", features = ["derive", "color", "suggestions"] }
anyhow = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = { version = "0.9", optional = true }

# Async runtime - only what we need, not "full"
tokio = { version = "1.0", features = ["rt-multi-thread", "macros", "process", "time", "fs"] }
futures = "0.3"

# File system and paths
dirs = "6.0"
glob = "0.3"

# Date and time
chrono = { version = "0.4", features = ["serde"] }

# Terminal UI - make optional for live mode only
colored = "3.0"
crossterm = { version = "0.29", optional = true }
ratatui = { version = "0.29", optional = true }

# Performance and concurrency
dashmap = "6.1"
rayon = { version = "1.8", optional = true }

# HTTP client for pricing API - make optional
reqwest = { version = "0.12", features = ["json"], optional = true }

# Structured logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "fmt", "ansi"] }
tracing-appender = "0.2"
uuid = { version = "1.6", features = ["v4", "fast-rng"] }

# Integration with claude-keeper for schema-resilient parsing
claude-keeper = { path = "../claude-keeper", features = ["cli", "storage", "query"] }

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.0"
tempfile = "3.8"
criterion = "0.5"

[features]
default = ["basic", "pricing"]
basic = ["toml"]  # Basic functionality with config file support
live = ["crossterm", "ratatui"]  # Live monitoring mode
pricing = ["reqwest"]  # Live pricing API support
parallel = ["rayon"]  # Parallel processing optimization
full = ["basic", "live", "pricing", "parallel"]  # All features enabled
keeper-integration = []  # Legacy feature flag

[profile.release]
strip = true
lto = true
codegen-units = 1
panic = "abort"

# Add benchmark configuration
[[bench]]
name = "parser_benchmark"
harness = false

[package.metadata.docs.rs]
all-features = true